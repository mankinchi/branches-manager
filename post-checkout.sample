#!/usr/bin/env node

const http = require('http');
const https = require('https');
const util = require('util');
const childProcessExec = require('child_process').exec;

const config = require('../../branches-manager.config.json');

const exec = util.promisify(childProcessExec);

const getBranchName = async () => {
	const branches = (await exec('git branch')).stdout;
	const current = (
		branches
			.split('\n')
			.find(
				(b) => b.trim()[0] === '*',
			)
	);

	return current.substring(2);
};

const execute = async () => {
	const branch = await getBranchName();

	const postData = JSON.stringify({
		server: config.serverName,
		branch,
		email: config.email,
		password: config.password,
	});

	const protocol = config.useHttps ? https : http;
	const port = config.appPort || (config.useHttps ? 443 : 80);

	const options = {
		hostname: config.appHost,
		port,
		path: '/api/change-issue',
		method: 'POST',
		headers: {
			'Content-Type': 'application/json',
		},
	};

	const req = protocol.request(options, (res) => {
		res.on('data', (data) => {
			console.log(`${data}`);
		});

		res.on('end', () => {
			process.exit(0);
		});
	});

	req.on('error', (e) => {
		console.error(e);
		process.exit(1);
	});

	req.write(postData);
	req.end();
};

execute();
